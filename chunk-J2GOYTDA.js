import{I as a,L as i,Vb as m,j as u,n as s}from"./chunk-CNGNWRF7.js";var c=class n{constructor(){}setItem(r,e){try{localStorage.setItem(r,JSON.stringify(e))}catch(t){console.error("Error saving to localStorage",t)}}getItem(r){try{let e=localStorage.getItem(r);return e?JSON.parse(e):null}catch(e){return console.error("Error getting from localStorage",e),null}}static \u0275fac=function(e){return new(e||n)};static \u0275prov=a({token:n,factory:n.\u0275fac,providedIn:"root"})};var f=[{name:"yoyo",role:"Admin",password:"9148@yoyo"},{name:"anand",role:"User",password:"kanand@6373"}],l="currentUserToken",g=class n{constructor(r,e){this.router=r;this.localStorageService=e;let t=this.localStorageService.getItem(l);if(t){let o=this.decodeMockToken(t);o&&this.currentUserSubject.next(o)}}currentUserSubject=new u(null);currentUser$=this.currentUserSubject.asObservable();get currentUserValue(){return this.currentUserSubject.value}login(r,e){let t=f.find(o=>o.name.toLowerCase()===r.toLowerCase()&&o.password===e);if(t){let o={name:t.name,role:t.role},d=this.createMockToken(o);return this.localStorageService.setItem(l,d),this.currentUserSubject.next(o),s(!0)}return s(!1)}logout(){this.localStorageService.setItem(l,null),this.currentUserSubject.next(null),this.router.navigate(["/login"])}createMockToken(r){return btoa(JSON.stringify(r))}decodeMockToken(r){try{return JSON.parse(atob(r))}catch{return null}}updatePassword(r){let e=this.currentUserValue;if(!e)return s(!1);let t=f.find(o=>o.name===e.name);return t?(t.password=r,console.log(`(Mock Backend) Password for ${t.name} has been updated.`),s(!0)):s(!1)}static \u0275fac=function(e){return new(e||n)(i(m),i(c))};static \u0275prov=a({token:n,factory:n.\u0275fac,providedIn:"root"})};export{g as a};
